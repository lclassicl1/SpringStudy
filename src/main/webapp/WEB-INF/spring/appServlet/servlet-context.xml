<?xml version="1.0" encoding="UTF-8"?>
<beans:beans xmlns="http://www.springframework.org/schema/mvc"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="http://www.springframework.org/schema/mvc https://www.springframework.org/schema/mvc/spring-mvc.xsd
		http://www.springframework.org/schema/beans https://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

	<!-- DispatcherServlet Context: defines this servlet's request-processing infrastructure -->
	
	<!-- Enables the Spring MVC @Controller programming model -->
	<annotation-driven />
	
	<!-- 정적 자원들 설정(이미지, css, js파일들) -->
	<!-- Handles HTTP GET requests for /resources/** by efficiently serving up static resources in the ${webappRoot}/resources directory -->
	<resources mapping="/resources/**" location="/resources/" />

	<!-- Resolves views selected for rendering by @Controllers to .jsp resources in the /WEB-INF/views directory -->
	<beans:bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
		<beans:property name="prefix" value="/WEB-INF/views/" />
		<beans:property name="suffix" value=".jsp" />
	</beans:bean>
	
		<!-- bean 요소
	class="패키지명.클래스명"
	id="유니크한 ID명" -->
	<!-- com.mycom.app.emp.service EmpService eService = new EmpServiceImpl() -->
	<beans:bean id="eService" class="com.mycom.app.emp.service.EmpServiceImpl"></beans:bean>

	<!-- com.mycom.app.emp.repository EmpDAOImpl empDAO = new EmpDAOImpl(); -->
	<beans:bean id="empDAO" class="com.mycom.app.emp.repository.EmpDAOImpl"></beans:bean>	
	
	<!-- <beans:bean class="article.model.Writer" id="writer">
		<beans:constructor-arg>
			<b
		</beans:constructor-arg>
	</beans:bean>
	
	기본생성자를 이용하여 필드값을 주면서 생성
	<beans:bean class="article.model.Article" id="article">
		<beans:property name="read_cnt" ref="writer" value="0"></beans:property>
	</beans:bean> -->
	
	<!-- controller bean 추가 -->
	<!-- <beans:bean class="com.mycom.member.controller.MainController"/> -->
		
	<!-- controller파일의 위치를 설정 -->
	<context:component-scan base-package="com.mycom.*" />
	
	<!-- 인터셉터 클래스(bean) 등록 -->
	<interceptors>
		<!-- <beans:bean class="com.mycom.app.interceptor.ExInterceptor"></beans:bean> -->
		<beans:bean class="com.mycom.app.interceptor.MonitoringInterceptor"></beans:bean>
	</interceptors>
	
	<!-- db 연동과 관련된 클래스(bean) 등록 -->
	<!-- Datasource 객체가 필요한이유
	스프링 jdbc가 jdbc api를 사용하여 db에 접속하려면 드라이버로딩, db에접소그 커넥션객체를 받아오는 순서가 필요하다.
	따라서 datasource를 db에 연결해야하기때문에 datasource 객체를 bean으로 등록해야한다 -->
	<beans:bean id="dataSource" class="org.springframework.jdbc.datasource.DriverManagerDataSource">
       <beans:property name="driverClassName" value="com.mysql.cj.jdbc.Driver"/>  
       <beans:property name="url" value="jdbc:mysql://localhost:3306/springdb?serverTimezone=UTC&amp;useUnicode=true&amp;characterEncoding=utf8"/> 
       <beans:property name="username" value="spuser"/> 
       <beans:property name="password" value="asdf123"/>  
   </beans:bean>
   <beans:bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">  
       <beans:property name="dataSource" ref="dataSource"/>
   </beans:bean>  
	
</beans:beans>
